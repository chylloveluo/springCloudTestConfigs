server.port=8600
spring.application.name=springcloud-sys
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.fetchRegistry=true
eureka.client.registerWithEureka=true
feign.hystrix.enabled=true
eureka.instance.preferIpAddress=true

spring.servlet.multipart.max-file-size=300MB
spring.servlet.multipart.max-request-size=500MB


########### 数据源配置 ###########
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/chyl_manage_sys?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
###################以下为druid增加的配置###########################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=0
spring.datasource.minIdle=0
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=25200000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.removeAbandoned=true
spring.datasource.removeAbandonedTimeout=1800
spring.datasource.logAbandoned=true
#spring.datasource.filters=stat
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
###############以上为配置druid添加的配置########################################

#设置输出MyBatis执行的Sql日志
#logging.level.com.chyl.springboot.mapper=DEBUG
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.type-aliases-package=com.chyl.mbg.pojo
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=GMT+8
spring.jackson.locale=zh_CN

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

logging.config=classpath:log4j2-spring.xml
logging.level.cn.jay.repository=trace

spring.rabbitmq.host=192.168.0.43
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
management.endpoints.web.exposure.include=*

##security.oauth2.client.clientId=springcloudSys
##security.oauth2.client.clientSecret=4124124
##指定认证服务器 /oauth/check_token 用于检验 token 合法性
##security.oauth2.resource.tokenInfoUri=http://localhost:9600/oauth/check_token
## 指定认证服务器 /oauth/token_key 用于获取 token的加密密钥
##security.oauth2.resource.jwt.keyUri=http://localhost:9600/oauth/token_key

#JWT存储的请求头	
jwt.tokenHeader=Authorization
#JWT加解密使用的密钥
jwt.secret=mall-portal-secret
#JWT的超期限时间(60*60*24*7)
jwt.expiration=604800
#JWT负载中拿到开头
jwt.tokenHead=Bearer

secure.ignored.urls[0]=/swagger-ui.html
secure.ignored.urls[1]=/swagger-resources/**
secure.ignored.urls[2]=/swagger/**
secure.ignored.urls[3]=/**/v2/api-docs
secure.ignored.urls[4]=/**/*.js
secure.ignored.urls[5]=/**/*.css
secure.ignored.urls[6]=/**/*.png
secure.ignored.urls[7]=/**/*.ico
secure.ignored.urls[8]=/webjars/springfox-swagger-ui/**
secure.ignored.urls[9]=/druid/**
secure.ignored.urls[9]=/actuator/**
secure.ignored.urls[9]=/sso/**
secure.ignored.urls[10]=/sysModule/sso/**

oauth2.client_id=eleApplication
oauth2.client_secret=123456

